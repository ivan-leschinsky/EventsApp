<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="add" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="addTrack" xml:space="preserve">
    <value>Add track</value>
  </data>
  <data name="archieveEvents" xml:space="preserve">
    <value>Archiv events</value>
  </data>
  <data name="archive" xml:space="preserve">
    <value>Archive</value>
  </data>
  <data name="areYouSure" xml:space="preserve">
    <value>Are you sure?</value>
  </data>
  <data name="avatar" xml:space="preserve">
    <value>Avatar</value>
  </data>
  <data name="changePassword" xml:space="preserve">
    <value>Change password</value>
  </data>
  <data name="changePersonalData" xml:space="preserve">
    <value>Changing personal Information</value>
  </data>
  <data name="changePlaylist" xml:space="preserve">
    <value>Changing playlist</value>
  </data>
  <data name="changeProfile" xml:space="preserve">
    <value>Change profile</value>
  </data>
  <data name="changingAvatar" xml:space="preserve">
    <value>Changing avatar</value>
  </data>
  <data name="changingPassword" xml:space="preserve">
    <value>Changing password</value>
  </data>
  <data name="chooseTags" xml:space="preserve">
    <value>Choose tags</value>
  </data>
  <data name="chooseYourInterest" xml:space="preserve">
    <value>Choose your interests</value>
  </data>
  <data name="confirnNewPassword" xml:space="preserve">
    <value>Confirm new password</value>
  </data>
  <data name="createEvent" xml:space="preserve">
    <value>Create event</value>
  </data>
  <data name="creatingEvent" xml:space="preserve">
    <value>Creating event</value>
  </data>
  <data name="creator" xml:space="preserve">
    <value>Creator</value>
  </data>
  <data name="currentPassword" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="enter" xml:space="preserve">
    <value>Enter</value>
  </data>
  <data name="entering" xml:space="preserve">
    <value>Enter</value>
  </data>
  <data name="enterPlease" xml:space="preserve">
    <value>Enter, please</value>
  </data>
  <data name="error" xml:space="preserve">
    <value>Error!</value>
  </data>
  <data name="eventCreate" xml:space="preserve">
    <value>Create event</value>
  </data>
  <data name="eventDateTime" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="eventDescription" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="eventName" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="eventParticipants" xml:space="preserve">
    <value>Participant</value>
  </data>
  <data name="events" xml:space="preserve">
    <value>Events</value>
  </data>
  <data name="eventShow" xml:space="preserve">
    <value>Show event</value>
  </data>
  <data name="exit" xml:space="preserve">
    <value>Exit</value>
  </data>
  <data name="fieldShouldBedate" xml:space="preserve">
    <value>Field should be date type</value>
  </data>
  <data name="login" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="mostActiveParticipant" xml:space="preserve">
    <value>The most active users</value>
  </data>
  <data name="nearest" xml:space="preserve">
    <value>Nearest</value>
  </data>
  <data name="nearestEvents" xml:space="preserve">
    <value>Nearest events</value>
  </data>
  <data name="newEvent" xml:space="preserve">
    <value>New event</value>
  </data>
  <data name="newPassword" xml:space="preserve">
    <value>New password</value>
  </data>
  <data name="numberParticipant" xml:space="preserve">
    <value>Number of participant</value>
  </data>
  <data name="password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="player" xml:space="preserve">
    <value>Player</value>
  </data>
  <data name="profileEdit" xml:space="preserve">
    <value>Edit profile</value>
  </data>
  <data name="profileName" xml:space="preserve">
    <value>Username</value>
  </data>
  <data name="register" xml:space="preserve">
    <value>Register</value>
  </data>
  <data name="rememberMe" xml:space="preserve">
    <value>Remember me</value>
  </data>
  <data name="repeatPassword" xml:space="preserve">
    <value>Repeat password</value>
  </data>
  <data name="requireToFullfillFieldTimeEvent" xml:space="preserve">
    <value>Required to fullfill field</value>
  </data>
  <data name="save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="search" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="searchEvents" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="seeProfile" xml:space="preserve">
    <value>Watch Profile</value>
  </data>
  <data name="shortlyAbout" xml:space="preserve">
    <value>Something about youself</value>
  </data>
  <data name="show" xml:space="preserve">
    <value>Show</value>
  </data>
  <data name="sorryNothingHasFound" xml:space="preserve">
    <value>Sorry, nothing found</value>
  </data>
  <data name="subscribe" xml:space="preserve">
    <value>Subscribe</value>
  </data>
  <data name="tags" xml:space="preserve">
    <value>Tags</value>
  </data>
  <data name="time" xml:space="preserve">
    <value>Time</value>
  </data>
  <data name="title" xml:space="preserve">
    <value>People&amp;Event</value>
  </data>
  <data name="trackDelete" xml:space="preserve">
    <value>Delete tracks</value>
  </data>
  <data name="trackName" xml:space="preserve">
    <value>Track name</value>
  </data>
  <data name="trackUrl" xml:space="preserve">
    <value>Track URL</value>
  </data>
  <data name="unSubscribe" xml:space="preserve">
    <value>Unsubscribe</value>
  </data>
  <data name="uploadAvatar" xml:space="preserve">
    <value>Upload Avatar</value>
  </data>
  <data name="userAbout" xml:space="preserve">
    <value>About User</value>
  </data>
  <data name="userEdit" xml:space="preserve">
    <value>Edit profile</value>
  </data>
  <data name="userEventsHistory" xml:space="preserve">
    <value>History events partaking</value>
  </data>
  <data name="userInterests" xml:space="preserve">
    <value>User interests</value>
  </data>
  <data name="users" xml:space="preserve">
    <value>Users</value>
  </data>
  <data name="watchProfile" xml:space="preserve">
    <value>Watch Profile</value>
  </data>
  <data name="addModelError" xml:space="preserve">
    <value>The user name or password provided is incorrect.</value>
  </data>
  <data name="currentPasswordIsIncorrect" xml:space="preserve">
    <value>The current password is incorrect or the new password is invalid.</value>
  </data>
  <data name="passwordChanged" xml:space="preserve">
    <value>Password Succesfully Changed.</value>
  </data>
  <data name="passwordSet" xml:space="preserve">
    <value>Your password has been set.</value>
  </data>
  <data name="userAlreadyExists" xml:space="preserve">
    <value>User name already exists. Please enter a different user name.</value>
  </data>
  <data name="atLeastOneTag" xml:space="preserve">
    <value>You should choose at least one tag.</value>
  </data>
  <data name="minimumLengthPassword" xml:space="preserve">
    <value>The password must be at least 6 characters long.</value>
  </data>
  <data name="passwordsDoNotMatch" xml:space="preserve">
    <value>The new password and confirmation password do not match.</value>
  </data>
</root>